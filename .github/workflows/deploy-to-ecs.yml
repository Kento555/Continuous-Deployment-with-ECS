name: Deploy to ECS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (e.g., dev, staging, prod)"
        required: true
        default: "dev"

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ENV: ${{ github.event.inputs.environment }}

    steps:
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

      - name: Download current ECS task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.ENV }}-task-def \
            --query taskDefinition > task-definition.json

      - name: Render new task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: flask-container
          image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ env.ENV }}-ecr:${{ github.sha }}

      - name: Deploy ECS task
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: flask-service
          cluster: ${{ env.ENV }}-ecs
          wait-for-service-stability: true
